{"version":3,"sources":["reducers/productosReducer.js","reducers/validacionReducer.js","reducers/index.js","types/index.js","store.js","components/Header.js","config/axios.js","actions/productosActions.js","actions/validacionActions.js","components/NuevoProducto.js","components/Producto.js","components/Productos.js","components/EditarProducto.js","App.js","serviceWorker.js","index.js"],"names":["initialState","productos","error","loading","producto","combineReducers","state","action","type","payload","filter","id","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","to","clienteAxios","axios","create","baseURL","nuevoProducto","agregarProductoExito","agregarProductoError","obtenerProductosComienzo","descargaProductosExitosa","descargaProductosError","obtenerProductoEliminar","eliminarProductoExito","eliminarProductoError","obtenerProductoAction","obtenerProductoEditarExito","obtenerProductoEditarError","comenzarEdicionProducto","editarProductoExito","editarProductoError","validarFormularioAction","dispatch","iniciarValidacion","NuevoProducto","history","useState","nombre","guardarNombre","precio","guardarPrecio","useDispatch","agregarProducto","post","then","respuesta","catch","crearNuevoProductoAction","useSelector","onSubmit","e","preventDefault","trim","push","placeholder","value","onChange","target","Producto","confirmarEliminarProducto","Swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","console","log","delete","borrarProductoAction","onClick","Productos","useEffect","get","data","Fragment","scope","key","EditarProducto","match","nombreRef","useRef","precioRef","editarProducto","put","editarProductoAction","params","obtenerProductoEditarAction","current","defaultValue","ref","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52b1a2b6.chunk.js","sourcesContent":["import {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTOS,\n    DESCARGA_PRODUCTOS_ERROR,\n    DESCARGA_PRODUCTOS_EXITOSA,\n    OBTENER_PRODUCTO_ELIMINAR,\n    PRODUCTO_ELIMINADO_EXITO,\n    PRODUCTO_ELIMINADO_ERROR,\n    OBTENER_PRODUCTO_EDITAR,\n    PRODUCTO_EDITAR_EXITO,\n    PRODUCTO_EDITAR_ERROR,\n    COMENZAR_EDICION_PRODUCTO,\n    PRODUCTO_EDITADO_EXITO,\n    PRODUCTO_EDITADO_ERROR\n} from '../types';\n\n\n//Cada reducer tiene su propio state\n\nconst initialState = {\n    productos: [],\n    error: null,\n    loading: false,\n    producto: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case AGREGAR_PRODUCTO:\n            return {\n                ...state,\n                error: null\n            }\n        case AGREGAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                error: null,\n                productos: [...state.productos, action.payload]\n            }\n        case AGREGAR_PRODUCTO_ERROR:\n            return {\n                ...state,\n                error: true,\n            }\n        case COMENZAR_DESCARGA_PRODUCTOS:\n            return {\n                ...state,\n                loading: true,\n                producto: {}\n            }\n        case DESCARGA_PRODUCTOS_EXITOSA:\n            return {\n                ...state,\n                productos: action.payload,\n                loading: false,\n                error: false,\n                producto: {}\n            }\n        case DESCARGA_PRODUCTOS_ERROR:\n            return {\n                ...state,\n                productos: [],\n                error: true,\n                loading: false,\n                producto: {}\n            }\n        case OBTENER_PRODUCTO_ELIMINAR:\n            return {\n                ...state,\n                error: null\n            }\n        case PRODUCTO_ELIMINADO_EXITO:\n            return {\n                ...state,\n                error: null,\n                productos: state.productos.filter(producto => producto.id !== action.payload)\n            }\n        case PRODUCTO_ELIMINADO_ERROR:\n            return {\n                ...state,\n                error: true\n            }\n\n        case OBTENER_PRODUCTO_EDITAR:\n            return {\n                ...state,\n                error: null\n            }\n        case PRODUCTO_EDITAR_EXITO:\n            return {\n                ...state,\n                error: null,\n                producto: action.payload\n            }\n\n        case PRODUCTO_EDITAR_ERROR:\n            return {\n                ...state,\n                error: true,\n            }\n        case COMENZAR_EDICION_PRODUCTO:\n            return {\n                ...state,\n                error: null\n            }\n        case PRODUCTO_EDITADO_EXITO:\n            return {\n                ...state,\n                error: null,\n                productos: state.productos.map(producto => producto.id === action.payload.id ? producto = action.payload : producto)\n            }\n        case PRODUCTO_EDITADO_ERROR:\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state;\n    }\n}","import {\n    VALIDAR_FORMULARIO,\n    VALIDAR_FORMULARIO_EXITO,\n    VALIDAR_FORMULARIO_ERROR\n} from '../types'\n\n//state inicial\nconst initialState = {\n    error: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                error: null\n            }\n        case VALIDAR_FORMULARIO_EXITO:\n            return {\n                ...state,\n                error: null\n            }\n        case VALIDAR_FORMULARIO_ERROR:\n            return {\n                ...state,\n                error: true\n            }\n        default: \n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport productosReducer from './productosReducer';\nimport validacionReducer from './validacionReducer'\n\n\nexport default combineReducers({\n    productos: productosReducer,\n    error: validacionReducer\n})","export const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const VALIDAR_FORMULARIO_EXITO = 'VALIDAR_FORMULARIO_EXITO';\nexport const VALIDAR_FORMULARIO_ERROR = 'VALIDAR_FORMULARIO_ERROR';\n\nexport const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\n\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\nexport const DESCARGA_PRODUCTOS_EXITOSA = 'DESCARGA_PRODUCTOS_EXITOSA';\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\n\nexport const OBTENER_PRODUCTO_ELIMINAR = 'OBTENER_PRODUCTO_ELIMINAR';\nexport const PRODUCTO_ELIMINADO_EXITO = 'PRODUCTO_ELIMINADO_EXITO';\nexport const PRODUCTO_ELIMINADO_ERROR = 'PRODUCTO_ELIMINADO_ERROR';\n\nexport const OBTENER_PRODUCTO_EDITAR = 'OBTENER_PRODUCTO_EDITAR';\nexport const PRODUCTO_EDITAR_EXITO = 'PRODUCTO_EDITAR_EXITO';\nexport const PRODUCTO_EDITAR_ERROR = 'PRODUCTO_EDITAR_ERROR'\n\nexport const COMENZAR_EDICION_PRODUCTO = 'COMENZAR_EDICION_PRODUCTO';\nexport const PRODUCTO_EDITADO_EXITO = 'PRODUCTO_EDITADO_EXITO';\nexport const PRODUCTO_EDITADO_ERROR = 'PRODUCTO_EDITADO_ERROR';","import { createStore, applyMiddleware, compose  } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState,\n    compose(applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\n            <div className=\"container\">\n                <h1>\n                    <Link to={\"/\"} className=\"text-light\">\n                        CRUD - React,  Redux Hooks, REST API y Axios\n                </Link>\n                </h1>\n\n                <Link to={'/productos/nuevo'} className=\"btn btn-danger nuevo-post d-block d-md-inline-block\">\n                    Agregar Producto &#43;\n            </Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Header;","import axios from 'axios'\n\nconst clienteAxios = axios.create({\n    baseURL: 'https://my-json-server.typicode.com/beatrizAdalab/productos'\n})\n\nexport default clienteAxios;","import {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTOS,\n    DESCARGA_PRODUCTOS_EXITOSA,\n    DESCARGA_PRODUCTOS_ERROR,\n    OBTENER_PRODUCTO_ELIMINAR,\n    PRODUCTO_ELIMINADO_EXITO,\n    PRODUCTO_ELIMINADO_ERROR,\n    OBTENER_PRODUCTO_EDITAR,\n    PRODUCTO_EDITAR_EXITO,\n    PRODUCTO_EDITAR_ERROR,\n    COMENZAR_EDICION_PRODUCTO,\n    PRODUCTO_EDITADO_EXITO,\n    PRODUCTO_EDITADO_ERROR\n} from '../types';\n\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2';\n\n\n\n//Crear nuevo producto- funcion principal\n\nexport function crearNuevoProductoAction(producto) {\n    return (dispatch) => {\n        dispatch(nuevoProducto());\n\n        //instertar en API\n\n        clienteAxios.post('/libros', producto)\n        .then(respuesta =>{\n            //console.log(respuesta)\n\n            //si se añade bien\n\n            dispatch(agregarProductoExito(producto))\n        })\n\n        .catch(error =>{\n            //console.log(error);\n            dispatch(agregarProductoError())\n        })\n    }\n}\n\nexport const nuevoProducto = () => ({\n    type: AGREGAR_PRODUCTO\n})\n\nexport const agregarProductoExito = producto => ({\n    type: AGREGAR_PRODUCTO_EXITO,\n    payload: producto\n})\n\nexport const agregarProductoError = error => ({\n    type: AGREGAR_PRODUCTO_ERROR,\n})\n\n\n\n// Obtener Listado de Productos (Consultar API)\nexport function obtenerProductosAction() {\n    return (dispatch) => {\n        dispatch( obtenerProductosComienzo() );\n\n        //consultar la API\n\n        clienteAxios.get('/libros')\n        .then(respuesta =>{\n            //console.log(respuesta.data); \n            dispatch(descargaProductosExitosa(respuesta.data))   \n        })\n        .catch(error =>{\n            //console.log(error)\n            dispatch(descargaProductosError())   \n        })\n    }\n}\n\nexport const obtenerProductosComienzo = () => ({\n    type: COMENZAR_DESCARGA_PRODUCTOS\n})\n\nexport const descargaProductosExitosa = (productos) => ({\n    type: DESCARGA_PRODUCTOS_EXITOSA,\n    payload:productos\n})\n\nexport const descargaProductosError = () => ({\n    type: DESCARGA_PRODUCTOS_ERROR\n})\n\n\n// Función que elimina un producto en especifico\nexport function borrarProductoAction( id ) {\n    return (dispatch) => {\n        dispatch( obtenerProductoEliminar() )\n\n        // Eliminar en la API\n        clienteAxios.delete(`/libros/${id}`)\n            .then(respuesta => {\n                // console.log(respuesta);\n                dispatch( eliminarProductoExito(id)  );\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch( eliminarProductoError() );\n            })\n    }\n}\n\nexport const obtenerProductoEliminar = ()=>({\n    type: OBTENER_PRODUCTO_ELIMINAR\n})\n\nexport const eliminarProductoExito= id =>({\n    type: PRODUCTO_ELIMINADO_EXITO,\n    payload: id\n})\n\nexport const eliminarProductoError = () => ({\n    type: PRODUCTO_ELIMINADO_ERROR\n})\n\n// Obtener el Producto a Editar\nexport function obtenerProductoEditarAction(id) {\n    return(dispatch) => {\n        dispatch( obtenerProductoAction() );\n\n        // obtener producto de la api\n        clienteAxios.get(`/libros/${id}`)\n            .then(respuesta => {\n                console.log(respuesta.data);\n                dispatch( obtenerProductoEditarExito( respuesta.data ));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch( obtenerProductoEditarError() );\n            })\n    }\n}\n\nexport const obtenerProductoAction = () => ({\n    type: OBTENER_PRODUCTO_EDITAR\n})\n\nexport const obtenerProductoEditarExito = producto => ({\n    type: PRODUCTO_EDITAR_EXITO,\n    payload: producto\n})\n\nexport const obtenerProductoEditarError = () => ({\n    type: PRODUCTO_EDITAR_ERROR\n})\n\n\n/** Modifica un producto en la API y state */\nexport function editarProductoAction( producto ) {\n    return (dispatch) => {\n        dispatch(comenzarEdicionProducto())\n\n        // Consultar la API\n        clienteAxios.put(`/libros/${producto.id}`, producto )\n            .then(respuesta => {\n                // console.log(respuesta);\n                dispatch(editarProductoExito(respuesta.data) ) ;\n\n                Swal.fire(\n                    'Almacenado',\n                    'El producto se actualizó correctamente',\n                    'success'\n                )\n                \n            })\n            .catch( error => {\n                // console.log(error);\n                dispatch(editarProductoError()) \n            })\n\n    }\n } \n export const comenzarEdicionProducto = () => ({\n     type: COMENZAR_EDICION_PRODUCTO,\n })\n\n export const editarProductoExito = producto => ({\n     type: PRODUCTO_EDITADO_EXITO,\n     payload: producto\n })\n export const editarProductoError = () => ({\n     type: PRODUCTO_EDITADO_ERROR\n })","import {\n    VALIDAR_FORMULARIO,\n    VALIDAR_FORMULARIO_EXITO,\n    VALIDAR_FORMULARIO_ERROR\n} from '../types'\n\n\n\nexport function validarFormularioAction(){\n    return dispatch => {\n        dispatch( iniciarValidacion() )\n    }\n}\n\nexport const iniciarValidacion=() =>{\n    return {\n        type:VALIDAR_FORMULARIO\n    }\n}\n\nexport const validacionExito = () => {\n    return {\n        type: VALIDAR_FORMULARIO_EXITO\n    }\n}\n\n\nexport const validacionError = () => {\n    return {\n        type: VALIDAR_FORMULARIO_ERROR   \n    }\n}","import React, { useState } from 'react';\n\n//Redux\nimport { crearNuevoProductoAction } from '../actions/productosActions';\nimport { validarFormularioAction , validacionError , validacionExito} from '../actions/validacionActions';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst NuevoProducto = ({history}) => {\n\n\n    // sate\n    const [nombre, guardarNombre] = useState('');\n    const [precio, guardarPrecio] = useState('');\n\n    // Crear nuevo producto \n    const dispatch = useDispatch();\n    const agregarProducto = (producto) => dispatch(crearNuevoProductoAction(producto));\n    const validarFormulario = () => dispatch( validarFormularioAction());\n    const exitoValidacion = () => dispatch ( validacionExito());\n    const errorValidacion = () => dispatch ( validacionError());\n\n    //Obtener datos del state\n\n    const error = useSelector((state)=> state.error.error)\n\n\n    // Agregar nuevo producto\n    const submitNuevoProducto = e => {\n        e.preventDefault();\n\n        validarFormulario(); \n      \n        // Validar el formulario\n        if (nombre.trim() === '' || precio.trim() === '') {\n            errorValidacion();\n            return\n        }\n\n        // Si pasa la validación\n        exitoValidacion();\n\n        // crear el nuevo producto\n\n        agregarProducto({\n          nombre, precio\n        })\n        // redireccionar\n\n        history.push(\"/\")\n    }\n\n    return (\n        <div className=\"row justify-content-center mt-5\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold \">Agregar Nuevo Libro</h2>\n                        <form onSubmit={submitNuevoProducto}>\n                            <div className=\"form-group\">\n                                <label>Nombre Libro</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre Libro\"\n                                    value={nombre}\n                                    onChange={e => guardarNombre(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio Libro</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio Libro\"\n                                    value={precio}\n                                    onChange={e => guardarPrecio(e.target.value)}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Agregar</button>\n                        </form>\n                            {error? <div className=\"font-weight-bold alert alert-danger text-center mt-4\">\n                                Todos los campos son obligatorios\n                            </div>: null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NuevoProducto;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { borrarProductoAction } from '../actions/productosActions';\n\nconst Producto = ({ producto }) => {\n\n\n    // Dispatch para ejecutar las acciones\n    const dispatch = useDispatch();\n\n    const confirmarEliminarProducto = (id) => {\n        \n        Swal.fire({\n            title: '¿Estás seguro?',\n            text: \"Un producto eliminado no se puede recuperar\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'SI, Eliminar!',\n            cancelButtonText: 'Cancelar'\n        }).then((result) => {\n            if (result.value) {\n                Swal.fire(\n                    'Eliminado',\n                    'El producto se eliminó correctamente',\n                    'success'\n                )\n            }\n        })\n        console.log(id)\n        dispatch(borrarProductoAction(id))\n    }\n\n    return (\n        <tr>\n            <td>{producto.nombre}</td>\n            <td> <span className=\"font-weight-bold\"> {producto.precio} €</span> </td>\n            <td className=\"acciones\">\n                <Link\n                    to={`/productos/editar/${producto.id}`}\n                    className=\"btn btn-primary mr-2\">\n                    Editar\n                </Link>\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={() => confirmarEliminarProducto(producto.id)}\n                >\n                    Eliminar\n                </button>\n            </td>\n\n        </tr>\n    );\n}\n\nexport default Producto;","import React, { useEffect } from 'react';\nimport Producto from './Producto';\n\n\n//Redux\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerProductosAction } from '../actions/productosActions';\n\n\nconst Productos = () => {\n\n   // llamar la accion proncipal para obtener productos\n\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      //productos cuando el componente este listo\n      const cargarProductos = () => dispatch(obtenerProductosAction());\n      cargarProductos()\n   }, [])\n\n   //Acceder al state\n\n   const loading = useSelector((state) => state.productos.loading);\n   const error = useSelector((state) => state.productos.error);\n   const productos = useSelector(state => state.productos.productos);\n\n\n   return (\n      <React.Fragment>\n         {error ? <div className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un error...</div> : null}\n\n         <h2 className=\"text-center my-5\">Listado de Productos</h2>\n         <table className=\"table table-striped\">\n            <thead className=\"bg-primary table-dark\">\n               <tr>\n                  <th scope=\"col\">Nombre</th>\n                  <th scope=\"col\">Precio</th>\n                  <th scope=\"col\">Acciones</th>\n               </tr>\n            </thead>\n            <tbody>\n               {productos.map(producto => (\n                  <Producto\n                     key={producto.id}\n                     producto={producto}\n                  />\n               ))}\n\n            </tbody>\n         </table>\n         {loading ? 'Cargando...' : null}\n      </React.Fragment>\n   );\n}\n\nexport default Productos;","import React, {useEffect, Fragment, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { obtenerProductoEditarAction, editarProductoAction } from '../actions/productosActions';\nimport { validarFormularioAction, validacionExito, validacionError } from '../actions/validacionActions';\n\nimport Swal from 'sweetalert2';\n\nconst EditarProducto = ({ history, match }) => {\n\n    // Crear los refs\n    const nombreRef = useRef('');\n    const precioRef = useRef('');\n\n\n    // Dispatch para ejecutar la acción principal\n    const dispatch = useDispatch();\n\n    const editarProducto = (producto) => dispatch( editarProductoAction(producto) );\n    const validarFormulario = () => dispatch( validarFormularioAction() );\n    const exitoValidacion = () => dispatch( validacionExito() ) ;\n    const errorValidacion = () => dispatch( validacionError() ) ;\n\n\n    // obtener el ID a editar\n    const { id } = match.params;\n\n    useEffect( () => {\n        dispatch( obtenerProductoEditarAction(id ))\n    }, [dispatch, id]);\n\n    // Acceder al state\n    const producto = useSelector( state => state.productos.producto);\n    const error = useSelector( state => state.productos.error);\n\n    // Cuando carga la API\n    if(!producto) return 'Cargando...';\n\n    const submitEditarProducto = e => {\n        e.preventDefault();\n\n        // validar el formulario\n        validarFormulario();\n      \n        if(nombreRef.current.value.trim() === '' || precioRef.current.value.trim() === ''){\n            errorValidacion();\n            return;\n        }\n        \n        // no hay error\n        exitoValidacion();\n\n        // guardar los cambios\n        editarProducto({\n            id,\n            nombre: nombreRef.current.value,\n            precio: precioRef.current.value\n        });\n\n        // redireccionar\n        history.push('/');\n    }\n\n    return (\n\n        <Fragment>\n\n        { error \n        ? \n            <div className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un error, intenta de nuevo</div> \n        : \n        <div className=\"row justify-content-center mt-5\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center\">Editar Producto</h2>\n                        <form\n                            onSubmit={submitEditarProducto}\n                        >\n                            <div className=\"form-group\">\n                                <label>Titulo</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Titulo\"\n                                    defaultValue={producto.nombre}\n                                    ref={nombreRef}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio del Producto</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Precio\" \n                                    defaultValue={producto.precio}\n                                    ref={precioRef}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Guardar Cambios</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        }\n        </Fragment>\n        \n    );\n}\n \nexport default EditarProducto;","import React from 'react';\n\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//Router\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n\n// Componentes\nimport Header from './components/Header';\nimport NuevoProducto from './components/NuevoProducto';\nimport Productos from './components/Productos';\nimport EditarProducto from './components/EditarProducto';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path = \"/\" component = {Productos}/>\n            <Route exact path = \"/productos/nuevo\" component = {NuevoProducto}/>\n            <Route exact path = \"/productos/editar/:id\"  component = {EditarProducto}/>\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}